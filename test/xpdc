#!/usr/bin/perl -w

my %udata = ( username => "grieve",
			  category => "Staff",
			  fullname => "Gerry Grieve",

			);
my $PDC="phaspdc.phas.ubc.ca";  # Windows domain controller

add_PDC_User( \%udata );


sub add_PDC_User {

    my $udata_ref = shift;
    my %udata = %{$udata_ref};

	my $this_user = $udata{username} ;
	my $this_pass = $udata{pwd} ;
	my $this_gcos = $udata{fullname} ;
    my $this_cat  = $udata{category}; 
	
	$this_pass=~s/[\"]/'''$&'''/g;    				# escape double quotes 
	$this_pass=~s/[\<\>\$()\&\|\;\@\\\"`]/\\$&/g;    # escape some special characters

##  @cats_all = ( qw [ System  Ugrad Adj-Assoc
##                     Faculty Grads AGrad
##                      Others Postdocs Staff Misc Visitor]);
    my @wingrp_Fac =  qw (Others Adj-Assoc Faculty  Postdocs Visitor Emeritus);

    my $category = $udata{category} // "Staff";

    my @winrrp_Fac   =  qw (Others Adj-Assoc Faculty  Postdocs Visitor Emeritus);
    my @wingrp_Ugrad =  qw ( Ugrad Misc );

    if    (grep  { $this_cat eq $_ } @wingrp_Fac)    { $wingroup = 'Faculty';}
    elsif (grep  { $this_cat eq $_ } @wingrp_Ugrad)  { $wingroup = 'Ugrads' ;}
    else                                             { $wingroup = $this_cat }
  
   # don't propagate to PDC if group hasn't been set
   if ( $wingroup eq '' ) {
      print STDERR "Unidentified group/category. Not propagated to PDC\n";
      return;
   }
my $sshcmd="/usr/bin/ssh administrator\@$PDC";
   # query PDC to see if we already have an account
	open (USERS, "$sshcmd net user $this_user |") ||
       die ("Something's  wrong with $PDC. Talk to systems people");
	while(<USERS>) {
	
        if (/The user name could not be found/) {
			print "no such user $this_user\n";
            last;
		}
		else {
			print " user $this_user exists, changePDC bailing...\n";
			return;
		}	
	}
	

   close(USERS);
 
	## create new account or change password
	my $PS_cmd = "$sshcmd powershell.exe -InputFormat None d:\\\\scripts\\\\";
	my $Add_cmd = $PS_cmd . "NewUser.ps1 $this_user \\\'$this_pass\\\' \\\'$this_cat\\\' \\\'$this_gcos\\\' \\\'$wingroup\\\'";

	print "[$Add_cmd]", "\n";
exit;
  #if ($add) {
  #    # create new account
  #    print "Adding user $me to Windows domain ($PDC).\n";
  #    $cmd=$pscmd."NewUser.ps1 $me \\\'$thispass\\\' \\\'$category\\\' \\\'$gcos\\\' \\\'$wingroup\\\'";
  #
  #} else {
  #    # just change password
  #    #print "Setting password in Windows domain.\n";  #DEBUG
  #    $cmd=$pscmd."ChangeUserPwd.ps1 $me \\\'$thispass\\\'";
  #}
  #
  ## we have to launder a system call also 
  #if ($cmd =~ /^(.*)$/){ $cmd = $1; }
  #
  ##print "$cmd\n";   # debug
  #system($cmd);
  ##print "Exited with code: $?\n";  #DEBUG
  #
  #$<=$tmpid;
}
